{"version":3,"sources":["utils/styles.js","utils/arrays.js","utils/sorts.js","utils/envs.js","utils/links.js","components/loading-container/index.js","components/loading-alert/index.js","components/image-preview/index.js","consts/config.js","consts/image-api.js","pages/home/index.js","pages/images/context.js","components/image-details/index.js","pages/images/index.js","App.js","index.js"],"names":["Object","freeze","combineStyles","styles","filter","style","join","copyOrEmpty","array","sortByField","field","comparator","copyArray","sort","entryA","entryB","stringCompare","stringA","stringB","localeCompare","numberCompare","numberA","numberB","isDevelopment","_process$env","process","NODE_ENV","isProduction","localLink","path","concat","startsWith","substr","LoadingContainer","props","className","loading","children","react_default","a","createElement","Styles","Spinner","color","LoadingAlert","message","onReload","error","Alert","Button","onClick","Fragment","defaultProps","ImagePreview","source","details","_React$useState","React","useState","_React$useState2","slicedToArray","setLoading","_React$useState3","_React$useState4","image","setImage","_React$useState5","_React$useState6","setError","_React$useState7","_React$useState8","tooltipVisible","setTooltipVisible","load","useCallback","cancelCallback","axios","CancelToken","get","responseType","cancelToken","token","then","response","URL","createObjectURL","data","catch","isCancel","finally","cancel","useEffect","revokeObjectURL","onMouseEnter","onMouseLeave","loading_container","loading_alert","imageComponent","alt","src","url","download_url","href","target","rel","Fade","mountOnEnter","unmountOnExit","in","author","id","width","height","IMAGES_PAGE_SIZE","IMAGE_DEFAULT_WIDTH","IMAGE_DEFAULT_HEIGHT","BASE_URL","RANDOM_IMAGE","seed","Date","now","Config","LIST_IMAGES","page","limit","GET_IMAGE","HomePage","count","items","setItems","Array","map","key","index","uuid","content","Container","item","textOrder","textClass","Row","Col","md","size","order","image_preview","ImageAPI","fluid","react_router_dom","to","ImagesListContext","createContext","FIELD_COMPARATORS","Sorts","ImagesListProvider","list","setList","_response$headers","_response$headers$lin","_response$headers2","_response$headers2$li","hasPrevious","headers","link","indexOf","hasNext","Provider","value","reload","hasPreviousPage","hasNextPage","getData","Arrays","getSortedData","ImagesListConsumer","render","Consumer","ImageDetails","Card","CardBody","CardText","LIST_VALUE_TO_DATA_SOURCE_BY_SORT","ID","Author","ImagesPage","currentPage","setCurrentPage","setSort","Label","Input","type","onChange","event","keys","sortType","sm","lg","xl","image_details","disabled","oldCurrentPage","Math","max","Router","Envs","BrowserRouter","HashRouter","App","Navbar","NavbarBrand","Links","NavLink","basename","react_router","exact","component","rootElement","document","getElementById","ReactDOM","src_App"],"mappings":"yYAIeA,aAAOC,OAAO,CACzBC,cALG,YAA0BC,GAC7B,OAAOA,EAAOC,OAAQC,KAAYA,GAAOC,KAAK,QCD3C,SAASC,EAAYC,EAAQ,IAChC,MAAO,IAAIA,GAWAR,aAAOC,OAAO,CACzBM,cACAE,YAVG,SAAqBD,EAAOE,EAAOC,GACtC,MAAMC,EAAYL,EAAYC,GAC9B,OAAKE,GAAUC,EAGRC,EAAUC,KAAK,CAACC,EAAQC,IAAWJ,EAAWG,EAAOJ,GAAQK,EAAOL,KAFhEE,KCCAZ,aAAOC,OAAO,CACzBe,cATG,SAAuBC,EAAU,GAAIC,EAAU,IAClD,OAAOD,EAAQE,cAAcD,IAS7BE,cANG,SAAuBC,EAAU,EAAGC,EAAU,GACjD,OAAOD,EAAUC,KCLd,SAASC,IAAgB,IAAAC,EAC5B,MAAiC,iBAA1B,QAAAA,EAAAC,2EAAA,IAAAD,OAAA,EAAAA,EAAaE,UAGjB,SAASC,IACZ,OAAQJ,IAGGvB,aAAOC,OAAO,CACzBsB,gBACAI,iBCDW3B,aAAOC,OAAO,CACzB2B,UAPG,SAAmBC,GACtB,OAAOF,IAAY,GAAAG,OACVL,yBADU,OAAAK,OACkBD,EAAKE,WAAW,KAAOF,EAAKG,OAAO,GAAKH,GACvEA,WCkBKI,MAlBf,SAA0BC,GACtB,MAAOC,EAAgCD,EAAhCC,UAAWC,EAAqBF,EAArBE,QAASC,EAAYH,EAAZG,SAE3B,OACIC,EAAAC,EAAAC,cAAA,OAAKL,UAAWM,EAAOvC,cAAc,mBAAoBiC,IACpDC,EACKE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,MAAM,YADb,OAEFN,QAFE,IAEFA,OAFE,EAEFA,cCTlB,SAASO,EAAaV,GAClB,MAAOW,EAA4BX,EAA5BW,QAASC,EAAmBZ,EAAnBY,SAAUC,EAASb,EAATa,MAE1B,OACIT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAOL,MAAM,UACTL,EAAAC,EAAAC,cAAA,SAAIK,GAEHC,GACGR,EAAAC,EAAAC,cAAA,kBACUF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQN,MAAM,OAAOR,UAAU,iBAAiBe,QAASJ,GAAzD,QADV,kBAKHC,GACGT,EAAAC,EAAAC,cAACF,EAAAC,EAAMY,SAAP,KACIb,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGL,UAAU,QAAb,kBAAoCY,KAaxDH,EAAaQ,aAAe,CACxBP,QAAS,gCAGED,cCmGAS,MA/Hf,SAAsBnB,GAClB,MAAOC,EAA8BD,EAA9BC,UAAWmB,EAAmBpB,EAAnBoB,OAAQC,EAAWrB,EAAXqB,QAE1BC,EAA8BC,IAAMC,UAAS,GAA7CC,EAAA3D,OAAA4D,EAAA,EAAA5D,CAAAwD,EAAA,GAAOpB,EAAPuB,EAAA,GAAgBE,EAAhBF,EAAA,GACAG,EAA0BL,IAAMC,SAAS,IAAzCK,EAAA/D,OAAA4D,EAAA,EAAA5D,CAAA8D,EAAA,GAAOE,EAAPD,EAAA,GAAcE,EAAdF,EAAA,GACAG,EAA0BT,IAAMC,SAAS,IAAzCS,EAAAnE,OAAA4D,EAAA,EAAA5D,CAAAkE,EAAA,GAAOnB,EAAPoB,EAAA,GAAcC,EAAdD,EAAA,GAEAE,EAA4CZ,IAAMC,UAAS,GAA3DY,EAAAtE,OAAA4D,EAAA,EAAA5D,CAAAqE,EAAA,GAAOE,EAAPD,EAAA,GAAuBE,EAAvBF,EAAA,GAEMG,EAAOhB,IAAMiB,YAAY,KAC3BT,EAAS,MACTG,EAAS,MACTP,GAAW,GAEX,MAAMc,EAAiBC,IAAMC,YAAYvB,SAczC,OAbAsB,IAAME,IAAIxB,EAAQ,CAACyB,aAAc,OAAQC,YAAaL,EAAeM,QAChEC,KAAMC,IACHlB,EAASmB,IAAIC,gBAAgBF,EAASG,SAEzCC,MAAOxC,IACC6B,IAAMY,SAASzC,IAChBqB,GAAc,OAALrB,QAAK,IAALA,OAAA,EAAAA,EAAOF,UAAWE,KAGlC0C,QAAQ,KACL5B,GAAW,KAGZ,KACHc,EAAee,OAAO,eAE3B,CAACpC,IAYJ,OAVAG,IAAMkC,UAAUlB,EAAM,CAACA,IAEvBhB,IAAMkC,UAAU,IACL,KACC3B,GACAoB,IAAIQ,gBAAgB5B,IAG7B,CAACA,IAGA1B,EAAAC,EAAAC,cAAA,OACIL,UAAWM,EAAOvC,cAAc,eAAgBiC,GAChD0D,aAAc,IAAMrB,GAAkB,GACtCsB,aAAc,IAAMtB,GAAkB,IAEtClC,EAAAC,EAAAC,cAACuD,EAAD,CACI5D,UAAU,gCACVC,QAASA,GAER,KACG,GAAIW,EACA,OACIT,EAAAC,EAAAC,cAACwD,EAAD,CACInD,QAAQ,8BACRC,SAAU2B,EACV1B,MAAOA,IAKnB,MAAMkD,EACF3D,EAAAC,EAAAC,cAAA,OACIL,UAAU,qBACV+D,IAAK5C,EACL6C,IAAKnC,IAIb,OAAW,OAAPT,QAAO,IAAPA,OAAA,EAAAA,EAAS6C,OAAT,OAAgB7C,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAS8C,cAErB/D,EAAAC,EAAAC,cAAA,KACIL,UAAU,qBACVmE,KAAM/C,EAAQ6C,KAAO7C,EAAQ8C,aAC7BE,OAAO,SACPC,IAAI,uBAEHP,GAKNA,IAId1C,GACGjB,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CACItE,UAAU,+BACVuE,cAAY,EACZC,eAAa,EACbC,GAAIrC,GAEJjC,EAAAC,EAAAC,cAAA,OAAKL,UAAU,cACVoB,EAAQsD,QACLvE,EAAAC,EAAAC,cAAA,KAAGL,UAAU,QACRoB,EAAQuD,IAAMxE,EAAAC,EAAAC,cAAA,gBAAQe,EAAQuD,GAAhB,MACdvD,EAAQsD,QAIhBtD,EAAQwD,OAASxD,EAAQyD,QACtB1E,EAAAC,EAAAC,cAAA,KAAGL,UAAU,QAAQoB,EAAQwD,MAA7B,MAAuCxD,EAAQyD,YC9G5DhH,aAAOC,OAAO,CACzBgH,iBAL4B,GAM5BC,oBAL+B,IAM/BC,qBALgC,MCA7B,MAAMC,EAAW,wBAQTpH,aAAOC,OAAO,CACzBmH,WACAC,aATwB,CAACC,EAAOC,KAAKC,MAAOT,EAAQU,EAAOP,oBAAqBF,EAASS,EAAON,uBAAxE,GAAArF,OACrBsF,EADqB,UAAAtF,OACJwF,EADI,KAAAxF,OACIiF,EADJ,KAAAjF,OACakF,GASrCU,YARuB,CAACC,EAAO,EAAGC,EAAQH,EAAOR,mBAA1B,GAAAnF,OACpBsF,EADoB,kBAAAtF,OACK6F,EADL,WAAA7F,OACmB8F,GAQ1CC,UAPqB,CAACf,EAAIC,EAAQU,EAAOP,oBAAqBF,EAASS,EAAON,uBAAzD,GAAArF,OAClBsF,EADkB,QAAAtF,OACHgF,EADG,KAAAhF,OACGiF,EADH,KAAAjF,OACYkF,KCErC,SAASc,EAAS5F,GACd,MAAO6F,EAAS7F,EAAT6F,MAEPvE,EAA0BC,IAAMC,SAAS,IAAzCC,EAAA3D,OAAA4D,EAAA,EAAA5D,CAAAwD,EAAA,GAAOwE,EAAPrE,EAAA,GAAcsE,EAAdtE,EAAA,GAUA,OARAF,IAAMkC,UAAU,KACZsC,EAAS,IAAIC,MAAMH,IAAQI,IAAI,CAACC,EAAKC,KAAN,CAC3BD,IAAG,GAAAtG,OAAKuG,EAAL,KAAAvG,OAAcyF,KAAKC,OACtBF,KAAMgB,cACNC,QAAS,gdAEd,CAACR,IAGAzF,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAWrG,UAAU,QAChB6F,EAAMG,IAAI,CAACM,EAAMJ,KACd,MAAMK,GAAaL,EAAQ,GAAK,EAC1BM,EAAYD,EAAY,eAAiB,gBAC/C,OACIpG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAKR,IAAKK,EAAKL,IAAKjG,UAAU,QAC1BG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAM,EAAGC,MAAOX,EAAQ,IAC9B/F,EAAAC,EAAAC,cAACyG,EAAD,CAAc3F,OAAQ4F,EAAS7B,aAAaoB,EAAKnB,SAGrDhF,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CACI1G,UAAU,kBACV2G,GAAI,CAACC,KAAM,EAAGC,MAAON,IACrBpG,EAAAC,EAAAC,cAAA,KAAGL,UAAWM,EAAOvC,cAAc,iBAAkByI,IAAaF,EAAKF,aAMvFjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CACIrG,UAAU,OACVgH,OAAO,GAEP7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAASC,GAAG,UACR/G,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAQN,MAAM,WAAd,gBAapBmF,EAAS1E,aAAe,CACpB2E,MAAO,GAGID,wBC3Df,MAAMwB,EAAoB7F,IAAM8F,cAAc,MAExCC,EAAoB,CACtB1C,GAAI2C,EAAMzI,cACV6F,OAAQ4C,EAAMzI,cACd+F,MAAO0C,EAAMrI,cACb4F,OAAQyC,EAAMrI,cACdgF,IAAKqD,EAAMzI,cACXqF,aAAcoD,EAAMzI,eAGjB,SAAS0I,EAAmBxH,GAC/B,MAAOyF,EAAkBzF,EAAlByF,KAAMtF,EAAYH,EAAZG,SAEbmB,EAA8BC,IAAMC,UAAS,GAA7CC,EAAA3D,OAAA4D,EAAA,EAAA5D,CAAAwD,EAAA,GAAOpB,EAAPuB,EAAA,GAAgBE,EAAhBF,EAAA,GACAG,EAAwBL,IAAMC,SAAS,MAAvCK,EAAA/D,OAAA4D,EAAA,EAAA5D,CAAA8D,EAAA,GAAO6F,EAAP5F,EAAA,GAAa6F,EAAb7F,EAAA,GACAG,EAA0BT,IAAMC,SAAS,MAAzCS,EAAAnE,OAAA4D,EAAA,EAAA5D,CAAAkE,EAAA,GAAOnB,EAAPoB,EAAA,GAAcC,EAAdD,EAAA,GAEMM,EAAOhB,IAAMiB,YAAY,KAC3Bb,GAAW,GACX+F,EAAQ,MACRxF,EAAS,MAET,MAAMO,EAAiBC,IAAMC,YAAYvB,SAmBzC,OAjBAsB,IAAME,IAAIoE,EAASxB,YAAYC,EAAO,GAAI,CAAC3C,YAAaL,EAAeM,QAClEC,KAAMC,IAAa,IAAA0E,EAAAC,EAAAC,EAAAC,EAChB,MAAMC,GAA2D,KAA7C,QAAAJ,EAAA1E,EAAS+E,eAAT,IAAAL,OAAA,UAAAC,EAAAD,EAAkBM,YAAlB,IAAAL,OAAA,EAAAA,EAAwBM,QAAQ,SAC9CC,GAAuD,KAA7C,QAAAN,EAAA5E,EAAS+E,eAAT,IAAAH,OAAA,UAAAC,EAAAD,EAAkBI,YAAlB,IAAAH,OAAA,EAAAA,EAAwBI,QAAQ,SAChDR,EAAQ,CACJK,cACAI,UACA/E,KAAMH,EAASG,SAGtBC,MAAOxC,IACJqB,GAAc,OAALrB,QAAK,IAALA,OAAA,EAAAA,EAAOF,UAAWE,KAE9B0C,QAAQ,KACL5B,GAAW,KAGZ,KACHc,EAAee,OAAO,eAE3B,CAACiC,IAIJ,OAFAlE,IAAMkC,UAAUlB,EAAM,CAACA,IAGnBnC,EAAAC,EAAAC,cAAC8G,EAAkBgB,SAAnB,CAA4BC,MAAOvK,OAAOC,OAAO,CAC7CmC,UACAW,QACAyH,OAAQ/F,EACRgG,gBAAiB,WAAMd,QAAN,IAAMA,OAAN,EAAMA,EAAMM,YAC7BS,YAAa,WAAMf,QAAN,IAAMA,OAAN,EAAMA,EAAMU,QACzBM,QAAS,IAAMC,EAAOrK,YAAP,OAAmBoJ,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAMrE,MACxCuF,cAAgBnK,GAAUkK,EAAOnK,YAAP,OACtBkJ,QADsB,IACtBA,OADsB,EACtBA,EAAMrE,KAAM5E,EAAO8I,EAAkB9I,OAExC2B,GAcN,SAASyI,EAAmB5I,GAC/B,MAAO6I,EAAU7I,EAAV6I,OACP,OACIzI,EAAAC,EAAAC,cAAC8G,EAAkB0B,SAAnB,KACMT,GAAUQ,EAAOR,IAR/Bb,EAAmBtG,aAAe,CAC9BuE,KAAM,GAgBK2B,kCCtDA2B,MA/Bf,SAAsB/I,GAClB,MAAOC,EAAoBD,EAApBC,UAAW6B,EAAS9B,EAAT8B,MAElB,OACI1B,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAM/I,UAAWM,EAAOvC,cAAc,eAAgBiC,IAClDG,EAAAC,EAAAC,cAACyG,EAAD,CACI3F,OAAQ4F,EAASrB,UAAU7D,EAAM8C,IACjCvD,QAASS,IAGb1B,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,KACI7I,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,CAAUjJ,UAAWM,EAAOvC,cAAc,sBAAuB,gBAC5D8D,EAAM6C,QAAU,6BCZrC,MAAMwE,EAAoC,CACtCC,GAAOf,GAAUA,EAAMI,UACvBY,OAAWhB,GAAUA,EAAMM,cAAc,WAqG9BW,MAlGf,WACI,MAAAhI,EAAsCC,IAAMC,SAAS,GAArDC,EAAA3D,OAAA4D,EAAA,EAAA5D,CAAAwD,EAAA,GAAOiI,EAAP9H,EAAA,GAAoB+H,EAApB/H,EAAA,GAEAG,EAAwBL,IAAMC,SAAS,UAAvCK,EAAA/D,OAAA4D,EAAA,EAAA5D,CAAA8D,EAAA,GAAOjD,EAAPkD,EAAA,GAAa4H,EAAb5H,EAAA,GAEA,OACIzB,EAAAC,EAAAC,cAACkH,EAAD,CAAoB/B,KAAM8D,GACtBnJ,EAAAC,EAAAC,cAACsI,EAAD,CAAoBC,OAASR,GACzBjI,EAAAC,EAAAC,cAACuD,EAAD,CACI5D,UAAU,OACVC,QAASmI,EAAMnI,SAEd,IACOmI,EAAMxH,MAEFT,EAAAC,EAAAC,cAACwD,EAAD,CACInD,QAAQ,mCACRC,SAAUyH,EAAMC,OAChBzH,MAAOwH,EAAMxH,QAMrBT,EAAAC,EAAAC,cAACgG,EAAA,EAAD,KACIlG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAKzG,UAAU,QACXG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CACI1G,UAAU,YACV2G,GAAI,GAEJxG,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,iBAGAtJ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CACI/E,GAAG,OACHgF,KAAK,SACLvB,MAAO1J,EACPkL,SAAWC,IACPL,EAAQK,EAAMzF,OAAOgE,SAGxBvK,OAAOiM,KAAKZ,GACRlD,IAAK+D,GACF5J,EAAAC,EAAAC,cAAA,UAAQ4F,IAAK8D,GAAWA,OAM5C5J,EAAAC,EAAAC,cAACoG,EAAA,EAAD,KACKyC,EAAkCxK,GAAM0J,GAAOpC,IAAI,CAACnE,EAAOqE,IACxD/F,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CACIT,IAAG,GAAAtG,OAAKkC,EAAM8C,GAAX,KAAAhF,OAAiBuG,GACpBlG,UAAU,OACVgK,GAAI,GACJrD,GAAI,EACJsD,GAAI,EACJC,GAAI,GAEJ/J,EAAAC,EAAAC,cAAC8J,EAAD,CAActI,MAAOA,OAKjC1B,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAKzG,UAAU,aACXG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,KACIvG,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACIN,MAAM,UACN4J,UAAWhC,EAAME,kBACjBvH,QAAS,IAAMwI,EAAgBc,GAAmBC,KAAKC,IAAI,EAAGF,EAAiB,KAHnF,kBASJlK,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAK1G,UAAU,oDACXG,EAAAC,EAAAC,cAAA,YAAOiJ,EAAc,IAGzBnJ,EAAAC,EAAAC,cAACqG,EAAA,EAAD,KACIvG,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACIN,MAAM,UACN4J,UAAWhC,EAAMG,cACjBxH,QAAS,IAAMwI,EAAgBc,GAAmBA,EAAiB,IAHvE,iCCpFxC,MAAMG,EAASC,EAAKrL,gBACdsL,IACAC,IAuBSC,MArBf,WACI,OACIzK,EAAAC,EAAAC,cAAA,OAAKL,UAAU,OACXG,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAQrK,MAAM,SACVL,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAa3G,KAAM4G,EAAMtL,UAAU,MAAnC,UACAU,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAS7G,KAAM4G,EAAMtL,UAAU,YAA/B,mBAGJU,EAAAC,EAAAC,cAACgG,EAAA,EAAD,KACIlG,EAAAC,EAAAC,cAACmK,EAAD,CAAQS,SAAU3L,0BACda,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,KACI/K,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAOC,OAAK,EAACzL,KAAK,IAAI0L,UAAWzF,IACjCxF,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAOxL,KAAK,UAAU0L,UAAW/B,IACjClJ,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAUhE,GAAG,WCtBrC,MAAMmE,GAAcC,SAASC,eAAe,QAC5CC,IAAS5C,OAAOzI,EAAAC,EAAAC,cAACoL,EAAD,MAAQJ","file":"static/js/main.df2258c9.chunk.js","sourcesContent":["export function combineStyles(...styles) {\n    return styles.filter((style) => !!style).join(' ');\n}\n\nexport default Object.freeze({\n    combineStyles,\n});\n","export function copyOrEmpty(array = []) {\n    return [...array];\n}\n\nexport function sortByField(array, field, comparator) {\n    const copyArray = copyOrEmpty(array);\n    if (!field || !comparator) {\n        return copyArray; // or throw?\n    }\n    return copyArray.sort((entryA, entryB) => comparator(entryA[field], entryB[field]));\n}\n\nexport default Object.freeze({\n    copyOrEmpty,\n    sortByField,\n});\n","export function stringCompare(stringA = '', stringB = '') {\n    return stringA.localeCompare(stringB);\n}\n\nexport function numberCompare(numberA = 0, numberB = 0) {\n    return numberA - numberB;\n}\n\nexport default Object.freeze({\n    stringCompare,\n    numberCompare,\n});\n","export function isDevelopment() {\n    return process.env?.NODE_ENV === 'development';\n}\n\nexport function isProduction() {\n    return !isDevelopment();\n}\n\nexport default Object.freeze({\n    isDevelopment,\n    isProduction,\n});\n","import {isProduction} from './envs';\n\n// for github pages this is required due to usage of HashRouter for this particular production environment\nexport function localLink(path) {\n    return isProduction()\n        ? `${process.env.PUBLIC_URL}/#/${path.startsWith('/') ? path.substr(1) : path}`\n        : path;\n}\n\nexport default Object.freeze({\n    localLink,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Spinner} from 'reactstrap';\nimport {Styles} from '../../utils';\nimport './style.css';\n\nfunction LoadingContainer(props) {\n    const {className, loading, children} = props;\n\n    return (\n        <div className={Styles.combineStyles('LoadingContainer', className)}>\n            {loading\n                ? <Spinner color=\"primary\"/>\n                : children?.()}\n        </div>\n    );\n}\n\nLoadingContainer.propTypes = {\n    className: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    children: PropTypes.func.isRequired,\n};\n\nexport default LoadingContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Alert, Button} from 'reactstrap';\n\nfunction LoadingAlert(props) {\n    const {message, onReload, error} = props;\n\n    return (\n        <Alert color=\"danger\">\n            <p>{message}</p>\n\n            {onReload && (\n                <p>\n                    Click <Button color='link' className=\"alert-link p-0\" onClick={onReload}>here</Button> to try again.\n                </p>\n            )}\n\n            {error && (\n                <React.Fragment>\n                    <hr/>\n                    <p className=\"mb-0\">Error details: {error}</p>\n                </React.Fragment>\n            )}\n        </Alert>\n    );\n}\n\nLoadingAlert.propTypes = {\n    message: PropTypes.string,\n    onReload: PropTypes.func,\n    error: PropTypes.string,\n};\n\nLoadingAlert.defaultProps = {\n    message: 'Error while fetching data :(',\n};\n\nexport default LoadingAlert;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport {Fade} from 'reactstrap';\nimport LoadingContainer from '../loading-container';\nimport {Styles} from '../../utils';\nimport LoadingAlert from '../loading-alert';\nimport './style.css';\n\nfunction ImagePreview(props) {\n    const {className, source, details} = props;\n\n    const [loading, setLoading] = React.useState(false);\n    const [image, setImage] = React.useState('');\n    const [error, setError] = React.useState('');\n\n    const [tooltipVisible, setTooltipVisible] = React.useState(false);\n\n    const load = React.useCallback(() => {\n        setImage(null);\n        setError(null);\n        setLoading(true);\n\n        const cancelCallback = axios.CancelToken.source();\n        axios.get(source, {responseType: 'blob', cancelToken: cancelCallback.token})\n            .then((response) => {\n                setImage(URL.createObjectURL(response.data));\n            })\n            .catch((error) => {\n                if (!axios.isCancel(error)) {\n                    setError(error?.message || error);\n                }\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n\n        return () => {\n            cancelCallback.cancel('cancelled');\n        };\n    }, [source]);\n\n    React.useEffect(load, [load]);\n\n    React.useEffect(() => {\n        return () => {\n            if (image) {\n                URL.revokeObjectURL(image);\n            }\n        };\n    }, [image]);\n\n    return (\n        <div\n            className={Styles.combineStyles('ImagePreview', className)}\n            onMouseEnter={() => setTooltipVisible(true)}\n            onMouseLeave={() => setTooltipVisible(false)}\n        >\n            <LoadingContainer\n                className=\"ImagePreview-LoadingContainer\"\n                loading={loading}\n            >\n                {() => {\n                    if (error) {\n                        return (\n                            <LoadingAlert\n                                message='Could not load the image :('\n                                onReload={load}\n                                error={error}\n                            />\n                        );\n                    }\n\n                    const imageComponent = (\n                        <img\n                            className=\"ImagePreview-Image\"\n                            alt={source}\n                            src={image}\n                        />\n                    );\n\n                    if (details?.url || details?.download_url) {\n                        return (\n                            <a\n                                className=\"ImagePreview-Image\"\n                                href={details.url || details.download_url}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                {imageComponent}\n                            </a>\n                        );\n                    }\n\n                    return imageComponent;\n                }}\n            </LoadingContainer>\n\n            {details && (\n                <Fade\n                    className=\"ImagePreview-Details p-2 m-1\"\n                    mountOnEnter\n                    unmountOnExit\n                    in={tooltipVisible}\n                >\n                    <div className=\"text-light\">\n                        {details.author && (\n                            <p className='mb-0'>\n                                {details.id && <span>#{details.id}. </span>}\n                                {details.author}\n                            </p>\n                        )}\n\n                        {details.width && details.height && (\n                            <p className='mb-0'>{details.width} x {details.height}</p>\n                        )}\n                    </div>\n                </Fade>\n            )}\n        </div>\n    );\n}\n\nImagePreview.propTypes = {\n    className: PropTypes.string,\n    source: PropTypes.string.isRequired,\n    details: PropTypes.shape({\n        id: PropTypes.string,\n        author: PropTypes.string,\n        width: PropTypes.number,\n        height: PropTypes.number,\n        url: PropTypes.string,\n        download_url: PropTypes.string,\n    }),\n};\n\nexport default ImagePreview;\n","export const IMAGES_PAGE_SIZE = 20;\nexport const IMAGE_DEFAULT_WIDTH = 320;\nexport const IMAGE_DEFAULT_HEIGHT = 240;\n\nexport default Object.freeze({\n    IMAGES_PAGE_SIZE,\n    IMAGE_DEFAULT_WIDTH,\n    IMAGE_DEFAULT_HEIGHT,\n});","import Config from './config';\n\nexport const BASE_URL = 'https://picsum.photos';\nexport const RANDOM_IMAGE = (seed = Date.now(), width = Config.IMAGE_DEFAULT_WIDTH, height = Config.IMAGE_DEFAULT_HEIGHT) =>\n    `${BASE_URL}/seed/${seed}/${width}/${height}`;\nexport const LIST_IMAGES = (page = 0, limit = Config.IMAGES_PAGE_SIZE) =>\n    `${BASE_URL}/v2/list?page=${page}&limit=${limit}`;\nexport const GET_IMAGE = (id, width = Config.IMAGE_DEFAULT_WIDTH, height = Config.IMAGE_DEFAULT_HEIGHT) =>\n    `${BASE_URL}/id/${id}/${width}/${height}`;\n\nexport default Object.freeze({\n    BASE_URL,\n    RANDOM_IMAGE,\n    LIST_IMAGES,\n    GET_IMAGE,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, Container, Row} from 'reactstrap';\nimport Col from 'reactstrap/es/Col';\nimport {v4 as uuid} from 'uuid';\nimport ImagePreview from '../../components/image-preview';\nimport {ImageAPI} from '../../consts';\nimport {Styles} from '../../utils';\nimport {NavLink} from 'react-router-dom';\n\nfunction HomePage(props) {\n    const {count} = props;\n\n    const [items, setItems] = React.useState([]);\n\n    React.useEffect(() => {\n        setItems([...Array(count)].map((key, index) => ({\n            key: `${index}-${Date.now()}`,\n            seed: uuid(),\n            content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et velit at turpis hendrerit rutrum. Sed pellentesque nec leo non dictum. Vestibulum aliquam lorem quam, at volutpat nulla tincidunt at. Nulla quis ante mauris. Proin ornare purus in ipsum hendrerit, at faucibus neque aliquet. Pellentesque elit ante, suscipit ut luctus sed, sagittis id lacus. Curabitur scelerisque ultrices purus rutrum mattis. Vestibulum viverra scelerisque neque a egestas.',\n        })));\n    }, [count]);\n\n    return (\n        <Container className='pt-5'>\n            {items.map((item, index) => {\n                const textOrder = (index + 1) % 2;\n                const textClass = textOrder ? 'text-md-left' : 'text-md-right';\n                return (\n                    <Row key={item.key} className='mb-5'>\n                        <Col md={{size: 5, order: index % 2}}>\n                            <ImagePreview source={ImageAPI.RANDOM_IMAGE(item.seed)}/>\n                        </Col>\n\n                        <Col\n                            className='mt-sm-3 mt-md-0'\n                            md={{size: 7, order: textOrder}}>\n                            <p className={Styles.combineStyles('text-sm-center', textClass)}>{item.content}</p>\n                        </Col>\n                    </Row>\n                );\n            })}\n\n            <Container\n                className='mb-5'\n                fluid={true}\n            >\n                <NavLink to=\"images\">\n                    <Button color=\"primary\">\n                        Show more\n                    </Button>\n                </NavLink>\n            </Container>\n        </Container>\n    );\n}\n\nHomePage.propTypes = {\n    count: PropTypes.number,\n};\n\nHomePage.defaultProps = {\n    count: 5,\n};\n\nexport default HomePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport {ImageAPI} from '../../consts';\nimport {Arrays, Sorts} from '../../utils';\n\nconst ImagesListContext = React.createContext(null);\n\nconst FIELD_COMPARATORS = {\n    id: Sorts.stringCompare,\n    author: Sorts.stringCompare,\n    width: Sorts.numberCompare, // just for support\n    height: Sorts.numberCompare, // just for support\n    url: Sorts.stringCompare, // just for support\n    download_url: Sorts.stringCompare, // just for support\n};\n\nexport function ImagesListProvider(props) {\n    const {page, children} = props;\n\n    const [loading, setLoading] = React.useState(false);\n    const [list, setList] = React.useState(null);\n    const [error, setError] = React.useState(null);\n\n    const load = React.useCallback(() => {\n        setLoading(true);\n        setList(null);\n        setError(null);\n\n        const cancelCallback = axios.CancelToken.source();\n        // indexing starts at 1\n        axios.get(ImageAPI.LIST_IMAGES(page + 1), {cancelToken: cancelCallback.token})\n            .then((response) => {\n                const hasPrevious = response.headers?.link?.indexOf('prev') !== -1;\n                const hasNext = response.headers?.link?.indexOf('next') !== -1;\n                setList({\n                    hasPrevious,\n                    hasNext,\n                    data: response.data,\n                });\n            })\n            .catch((error) => {\n                setError(error?.message || error);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n\n        return () => {\n            cancelCallback.cancel('cancelled');\n        };\n    }, [page]);\n\n    React.useEffect(load, [load]);\n\n    return (\n        <ImagesListContext.Provider value={Object.freeze({\n            loading,\n            error,\n            reload: load,\n            hasPreviousPage: () => list?.hasPrevious,\n            hasNextPage: () => list?.hasNext,\n            getData: () => Arrays.copyOrEmpty(list?.data),\n            getSortedData: (field) => Arrays.sortByField(\n                list?.data, field, FIELD_COMPARATORS[field]),\n        })}>\n            {children}\n        </ImagesListContext.Provider>\n    );\n}\n\nImagesListProvider.propTypes = {\n    page: PropTypes.number,\n    children: PropTypes.node.isRequired,\n};\n\nImagesListProvider.defaultProps = {\n    page: 0,\n};\n\nexport function ImagesListConsumer(props) {\n    const {render} = props;\n    return (\n        <ImagesListContext.Consumer>\n            {(value) => render(value)}\n        </ImagesListContext.Consumer>\n    );\n}\n\nImagesListConsumer.propTypes = {\n    render: PropTypes.func.isRequired,\n};\n\nexport default ImagesListContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Card, CardBody, CardText} from 'reactstrap';\nimport ImagePreview from '../image-preview';\nimport {Styles} from '../../utils';\nimport {ImageAPI} from '../../consts';\nimport './style.css';\n\nfunction ImageDetails(props) {\n    const {className, image} = props;\n\n    return (\n        <Card className={Styles.combineStyles('ImageDetails', className)}>\n            <ImagePreview\n                source={ImageAPI.GET_IMAGE(image.id)}\n                details={image}\n            />\n\n            <CardBody>\n                <CardText className={Styles.combineStyles('ImageDetails-Author', 'text-center')}>\n                    {image.author || 'Author not known'}\n                </CardText>\n            </CardBody>\n        </Card>\n    );\n}\n\nImageDetails.propTypes = {\n    className: PropTypes.string,\n    image: PropTypes.shape({\n        id: PropTypes.string,\n        author: PropTypes.string,\n        width: PropTypes.number,\n        height: PropTypes.number,\n        url: PropTypes.string,\n        download_url: PropTypes.string,\n    }).isRequired,\n};\n\nexport default ImageDetails;\n","import React from 'react';\nimport {Button, Col, Container, Input, Label, Row} from 'reactstrap';\nimport {ImagesListConsumer, ImagesListProvider} from './context';\nimport LoadingContainer from '../../components/loading-container';\nimport ImageDetails from '../../components/image-details';\nimport LoadingAlert from '../../components/loading-alert';\nimport './styles.css';\n\nconst LIST_VALUE_TO_DATA_SOURCE_BY_SORT = {\n    'ID': (value) => value.getData(),\n    'Author': (value) => value.getSortedData('author'),\n};\n\nfunction ImagesPage() {\n    const [currentPage, setCurrentPage] = React.useState(0);\n\n    const [sort, setSort] = React.useState('Author');\n\n    return (\n        <ImagesListProvider page={currentPage}>\n            <ImagesListConsumer render={(value) => (\n                <LoadingContainer\n                    className='pt-5'\n                    loading={value.loading}\n                >\n                    {() => {\n                        if (value.error) {\n                            return (\n                                <LoadingAlert\n                                    message='Could not load the image list :('\n                                    onReload={value.reload}\n                                    error={value.error}\n                                />\n                            );\n                        }\n\n                        return (\n                            <Container>\n                                <Row className='mb-5'>\n                                    <Col\n                                        className='text-left'\n                                        md={3}\n                                    >\n                                        <Label>\n                                            Sort by:\n                                        </Label>\n                                        <Input\n                                            id=\"sort\"\n                                            type=\"select\"\n                                            value={sort}\n                                            onChange={(event) => {\n                                                setSort(event.target.value);\n                                            }}\n                                        >\n                                            {Object.keys(LIST_VALUE_TO_DATA_SOURCE_BY_SORT)\n                                                .map((sortType) => (\n                                                    <option key={sortType}>{sortType}</option>\n                                                ))}\n                                        </Input>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    {LIST_VALUE_TO_DATA_SOURCE_BY_SORT[sort](value).map((image, index) => (\n                                        <Col\n                                            key={`${image.id}-${index}`}\n                                            className='mb-4'\n                                            sm={12}\n                                            md={6}\n                                            lg={4} // this causes an empty slot at last position (3 items per row) which looks quite bad but better than lg={6}\n                                            xl={3}\n                                        >\n                                            <ImageDetails image={image}/>\n                                        </Col>\n                                    ))}\n                                </Row>\n\n                                <Row className='mt-5 mb-5'>\n                                    <Col>\n                                        <Button\n                                            color='primary'\n                                            disabled={!value.hasPreviousPage()}\n                                            onClick={() => setCurrentPage((oldCurrentPage) => Math.max(0, oldCurrentPage - 1))}\n                                        >\n                                            Previous page\n                                        </Button>\n                                    </Col>\n\n                                    <Col className='align-items-center justify-content-center d-flex'>\n                                        <span>{currentPage + 1}</span>\n                                    </Col>\n\n                                    <Col>\n                                        <Button\n                                            color='primary'\n                                            disabled={!value.hasNextPage()}\n                                            onClick={() => setCurrentPage((oldCurrentPage) => oldCurrentPage + 1)}\n                                        >\n                                            Next page\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        );\n                    }}\n                </LoadingContainer>\n            )}/>\n        </ImagesListProvider>\n    );\n}\n\nexport default ImagesPage;\n","import React from 'react';\nimport {Container, Navbar, NavbarBrand, NavLink} from 'reactstrap';\nimport {BrowserRouter, HashRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport HomePage from './pages/home';\nimport ImagesPage from './pages/images';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {Envs, Links} from './utils';\n\nconst Router = Envs.isDevelopment()\n    ? BrowserRouter\n    : HashRouter;\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Navbar color=\"light\">\n                <NavbarBrand href={Links.localLink('/')}>Images</NavbarBrand>\n                <NavLink href={Links.localLink('/images')}>See all images</NavLink>\n            </Navbar>\n\n            <Container>\n                <Router basename={process.env.PUBLIC_URL}>\n                    <Switch>\n                        <Route exact path=\"/\" component={HomePage}/>\n                        <Route path=\"/images\" component={ImagesPage}/>\n                        <Redirect to=\"/\"/>\n                    </Switch>\n                </Router>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App/>, rootElement);\n"],"sourceRoot":""}