{"version":3,"sources":["utils/styles.js","utils/arrays.js","utils/sorts.js","components/loading-container/index.js","components/loading-alert/index.js","components/image-preview/index.js","consts/config.js","consts/image-api.js","pages/home/index.js","pages/images/context.js","components/image-details/index.js","pages/images/index.js","App.js","index.js"],"names":["Object","freeze","combineStyles","styles","filter","style","join","copyOrEmpty","array","sortByField","field","comparator","copyArray","sort","entryA","entryB","stringCompare","stringA","stringB","localeCompare","numberCompare","numberA","numberB","LoadingContainer","props","className","loading","children","react_default","a","createElement","Styles","Spinner","color","LoadingAlert","message","onReload","error","Alert","href","onClick","Fragment","defaultProps","ImagePreview","source","details","_React$useState","React","useState","_React$useState2","slicedToArray","setLoading","_React$useState3","_React$useState4","image","setImage","_React$useState5","_React$useState6","setError","_React$useState7","_React$useState8","tooltipVisible","setTooltipVisible","load","useCallback","cancelCallback","axios","CancelToken","get","responseType","cancelToken","token","then","response","URL","createObjectURL","data","catch","isCancel","finally","cancel","useEffect","revokeObjectURL","onMouseEnter","onMouseLeave","loading_container","loading_alert","imageComponent","alt","src","url","download_url","target","rel","Fade","mountOnEnter","unmountOnExit","in","author","id","width","height","IMAGES_PAGE_SIZE","IMAGE_DEFAULT_WIDTH","IMAGE_DEFAULT_HEIGHT","BASE_URL","RANDOM_IMAGE","seed","Date","now","Config","concat","LIST_IMAGES","page","limit","GET_IMAGE","HomePage","count","items","setItems","Array","map","key","index","uuid","content","Container","item","textOrder","textClass","Row","Col","md","size","order","image_preview","ImageAPI","fluid","react_router_dom","to","Button","ImagesListContext","createContext","FIELD_COMPARATORS","Sorts","ImagesListProvider","list","setList","_response$headers","_response$headers$lin","_response$headers2","_response$headers2$li","hasPrevious","headers","link","indexOf","hasNext","Provider","value","reload","hasPreviousPage","hasNextPage","getData","Arrays","getSortedData","ImagesListConsumer","render","Consumer","ImageDetails","Card","CardBody","CardText","LIST_VALUE_TO_DATA_SOURCE_BY_SORT","ID","Author","ImagesPage","currentPage","setCurrentPage","setSort","Label","Input","type","onChange","event","keys","sortType","sm","lg","xl","image_details","disabled","oldCurrentPage","Math","max","Router","_process$env","process","NODE_ENV","BrowserRouter","HashRouter","App","Navbar","NavbarBrand","NavLink","basename","react_router","exact","path","component","rootElement","document","getElementById","ReactDOM","src_App"],"mappings":"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","file":"static/js/main.a999ce98.chunk.js","sourcesContent":["export function combineStyles(...styles) {\n    return styles.filter((style) => !!style).join(' ');\n}\n\nexport default Object.freeze({\n    combineStyles,\n});\n","export function copyOrEmpty(array = []) {\n    return [...array];\n}\n\nexport function sortByField(array, field, comparator) {\n    const copyArray = copyOrEmpty(array);\n    if (!field || !comparator) {\n        return copyArray; // or throw?\n    }\n    return copyArray.sort((entryA, entryB) => comparator(entryA[field], entryB[field]));\n}\n\nexport default Object.freeze({\n    copyOrEmpty,\n    sortByField,\n});\n","export function stringCompare(stringA = '', stringB = '') {\n    return stringA.localeCompare(stringB);\n}\n\nexport function numberCompare(numberA = 0, numberB = 0) {\n    return numberA - numberB;\n}\n\nexport default Object.freeze({\n    stringCompare,\n    numberCompare,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Spinner} from 'reactstrap';\nimport {Styles} from '../../utils';\nimport './style.css';\n\nfunction LoadingContainer(props) {\n    const {className, loading, children} = props;\n\n    return (\n        <div className={Styles.combineStyles('LoadingContainer', className)}>\n            {loading\n                ? <Spinner color=\"primary\"/>\n                : children?.()}\n        </div>\n    );\n}\n\nLoadingContainer.propTypes = {\n    className: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    children: PropTypes.func.isRequired,\n};\n\nexport default LoadingContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Alert} from 'reactstrap';\n\nfunction LoadingAlert(props) {\n    const {message, onReload, error} = props;\n\n    return (\n        <Alert color=\"danger\">\n            <p>{message}</p>\n\n            {onReload && (<p>Click <a href=\"#\" className=\"alert-link\" onClick={onReload}>here</a> to try again.</p>)}\n\n            {error && (\n                <React.Fragment>\n                    <hr/>\n                    <p className=\"mb-0\">Error details: {error}</p>\n                </React.Fragment>\n            )}\n        </Alert>\n    );\n}\n\nLoadingAlert.propTypes = {\n    message: PropTypes.string,\n    onReload: PropTypes.func,\n    error: PropTypes.string,\n};\n\nLoadingAlert.defaultProps = {\n    message: 'Error while fetching data :(',\n};\n\nexport default LoadingAlert;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport {Fade} from 'reactstrap';\nimport LoadingContainer from '../loading-container';\nimport {Styles} from '../../utils';\nimport LoadingAlert from '../loading-alert';\nimport './style.css';\n\nfunction ImagePreview(props) {\n    const {className, source, details} = props;\n\n    const [loading, setLoading] = React.useState(false);\n    const [image, setImage] = React.useState('');\n    const [error, setError] = React.useState('');\n\n    const [tooltipVisible, setTooltipVisible] = React.useState(false);\n\n    const load = React.useCallback(() => {\n        setImage(null);\n        setError(null);\n        setLoading(true);\n\n        const cancelCallback = axios.CancelToken.source();\n        axios.get(source, {responseType: 'blob', cancelToken: cancelCallback.token})\n            .then((response) => {\n                setImage(URL.createObjectURL(response.data));\n            })\n            .catch((error) => {\n                if (!axios.isCancel(error)) {\n                    setError(error?.message || error);\n                }\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n\n        return () => {\n            cancelCallback.cancel('cancelled');\n        };\n    }, [source]);\n\n    React.useEffect(load, [load]);\n\n    React.useEffect(() => {\n        return () => {\n            if (image) {\n                URL.revokeObjectURL(image);\n            }\n        };\n    }, [image]);\n\n    return (\n        <div\n            className={Styles.combineStyles('ImagePreview', className)}\n            onMouseEnter={() => setTooltipVisible(true)}\n            onMouseLeave={() => setTooltipVisible(false)}\n        >\n            <LoadingContainer\n                className=\"ImagePreview-LoadingContainer\"\n                loading={loading}\n            >\n                {() => {\n                    if (error) {\n                        return (\n                            <LoadingAlert\n                                message='Could not load the image :('\n                                onReload={load}\n                                error={error}\n                            />\n                        );\n                    }\n\n                    const imageComponent = (\n                        <img\n                            className=\"ImagePreview-Image\"\n                            alt={source}\n                            src={image}\n                        />\n                    );\n\n                    if (details?.url || details?.download_url) {\n                        return (\n                            <a\n                                className=\"ImagePreview-Image\"\n                                href={details.url || details.download_url}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                {imageComponent}\n                            </a>\n                        );\n                    }\n\n                    return imageComponent;\n                }}\n            </LoadingContainer>\n\n            {details && (\n                <Fade\n                    className=\"ImagePreview-Details p-2 m-1\"\n                    mountOnEnter\n                    unmountOnExit\n                    in={tooltipVisible}\n                >\n                    <div className=\"text-light\">\n                        {details.author && (\n                            <p className='mb-0'>\n                                {details.id && <span>#{details.id}. </span>}\n                                {details.author}\n                            </p>\n                        )}\n\n                        {details.width && details.height && (\n                            <p className='mb-0'>{details.width} x {details.height}</p>\n                        )}\n                    </div>\n                </Fade>\n            )}\n        </div>\n    );\n}\n\nImagePreview.propTypes = {\n    className: PropTypes.string,\n    source: PropTypes.string.isRequired,\n    details: PropTypes.shape({\n        id: PropTypes.string,\n        author: PropTypes.string,\n        width: PropTypes.number,\n        height: PropTypes.number,\n        url: PropTypes.string,\n        download_url: PropTypes.string,\n    }),\n};\n\nexport default ImagePreview;\n","export const IMAGES_PAGE_SIZE = 20;\nexport const IMAGE_DEFAULT_WIDTH = 320;\nexport const IMAGE_DEFAULT_HEIGHT = 240;\n\nexport default Object.freeze({\n    IMAGES_PAGE_SIZE,\n    IMAGE_DEFAULT_WIDTH,\n    IMAGE_DEFAULT_HEIGHT,\n});","import Config from './config';\n\nexport const BASE_URL = 'https://picsum.photos';\nexport const RANDOM_IMAGE = (seed = Date.now(), width = Config.IMAGE_DEFAULT_WIDTH, height = Config.IMAGE_DEFAULT_HEIGHT) =>\n    `${BASE_URL}/seed/${seed}/${width}/${height}`;\nexport const LIST_IMAGES = (page = 0, limit = Config.IMAGES_PAGE_SIZE) =>\n    `${BASE_URL}/v2/list?page=${page}&limit=${limit}`;\nexport const GET_IMAGE = (id, width = Config.IMAGE_DEFAULT_WIDTH, height = Config.IMAGE_DEFAULT_HEIGHT) =>\n    `${BASE_URL}/id/${id}/${width}/${height}`;\n\nexport default Object.freeze({\n    BASE_URL,\n    RANDOM_IMAGE,\n    LIST_IMAGES,\n    GET_IMAGE,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Container, Row, Button} from 'reactstrap';\nimport Col from 'reactstrap/es/Col';\nimport {v4 as uuid} from 'uuid';\nimport ImagePreview from '../../components/image-preview';\nimport {ImageAPI} from '../../consts';\nimport {Styles} from '../../utils';\nimport {NavLink} from 'react-router-dom';\n\nfunction HomePage(props) {\n    const {count} = props;\n\n    const [items, setItems] = React.useState([]);\n\n    React.useEffect(() => {\n        setItems([...Array(count)].map((key, index) => ({\n            key: `${index}-${Date.now()}`,\n            seed: uuid(),\n            content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et velit at turpis hendrerit rutrum. Sed pellentesque nec leo non dictum. Vestibulum aliquam lorem quam, at volutpat nulla tincidunt at. Nulla quis ante mauris. Proin ornare purus in ipsum hendrerit, at faucibus neque aliquet. Pellentesque elit ante, suscipit ut luctus sed, sagittis id lacus. Curabitur scelerisque ultrices purus rutrum mattis. Vestibulum viverra scelerisque neque a egestas.',\n        })));\n    }, [count]);\n\n    return (\n        <Container className='pt-5'>\n            {items.map((item, index) => {\n                const textOrder = (index + 1) % 2;\n                const textClass = textOrder ? 'text-md-left' : 'text-md-right';\n                return (\n                    <Row key={item.key} className='mb-5'>\n                        <Col md={{size: 5, order: index % 2}}>\n                            <ImagePreview source={ImageAPI.RANDOM_IMAGE(item.seed)}/>\n                        </Col>\n\n                        <Col\n                            className='mt-sm-3 mt-md-0'\n                            md={{size: 7, order: textOrder}}>\n                            <p className={Styles.combineStyles('text-sm-center', textClass)}>{item.content}</p>\n                        </Col>\n                    </Row>\n                );\n            })}\n\n            <Container\n                className='mb-5'\n                fluid={true}\n            >\n                <NavLink to=\"images\">\n                    <Button color=\"primary\">\n                        Show more\n                    </Button>\n                </NavLink>\n            </Container>\n        </Container>\n    );\n}\n\nHomePage.propTypes = {\n    count: PropTypes.number,\n};\n\nHomePage.defaultProps = {\n    count: 5,\n};\n\nexport default HomePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport {ImageAPI} from '../../consts';\nimport {Arrays, Sorts} from '../../utils';\n\nconst ImagesListContext = React.createContext(null);\n\nconst FIELD_COMPARATORS = {\n    id: Sorts.stringCompare,\n    author: Sorts.stringCompare,\n    width: Sorts.numberCompare, // just for support\n    height: Sorts.numberCompare, // just for support\n    url: Sorts.stringCompare, // just for support\n    download_url: Sorts.stringCompare, // just for support\n};\n\nexport function ImagesListProvider(props) {\n    const {page, children} = props;\n\n    const [loading, setLoading] = React.useState(false);\n    const [list, setList] = React.useState(null);\n    const [error, setError] = React.useState(null);\n\n    const load = React.useCallback(() => {\n        setLoading(true);\n        setList(null);\n        setError(null);\n\n        const cancelCallback = axios.CancelToken.source();\n        // indexing starts at 1\n        axios.get(ImageAPI.LIST_IMAGES(page + 1), {cancelToken: cancelCallback.token})\n            .then((response) => {\n                const hasPrevious = response.headers?.link?.indexOf('prev') !== -1;\n                const hasNext = response.headers?.link?.indexOf('next') !== -1;\n                setList({\n                    hasPrevious,\n                    hasNext,\n                    data: response.data,\n                });\n            })\n            .catch((error) => {\n                setError(error?.message || error);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n\n        return () => {\n            cancelCallback.cancel('cancelled');\n        };\n    }, [page]);\n\n    React.useEffect(load, [load]);\n\n    return (\n        <ImagesListContext.Provider value={Object.freeze({\n            loading,\n            error,\n            reload: load,\n            hasPreviousPage: () => list?.hasPrevious,\n            hasNextPage: () => list?.hasNext,\n            getData: () => Arrays.copyOrEmpty(list?.data),\n            getSortedData: (field) => Arrays.sortByField(\n                list?.data, field, FIELD_COMPARATORS[field]),\n        })}>\n            {children}\n        </ImagesListContext.Provider>\n    );\n}\n\nImagesListProvider.propTypes = {\n    page: PropTypes.number,\n    children: PropTypes.node.isRequired,\n};\n\nImagesListProvider.defaultProps = {\n    page: 0,\n};\n\nexport function ImagesListConsumer(props) {\n    const {render} = props;\n    return (\n        <ImagesListContext.Consumer>\n            {(value) => render(value)}\n        </ImagesListContext.Consumer>\n    );\n}\n\nImagesListConsumer.propTypes = {\n    render: PropTypes.func.isRequired,\n};\n\nexport default ImagesListContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Card, CardBody, CardText} from 'reactstrap';\nimport ImagePreview from '../image-preview';\nimport {Styles} from '../../utils';\nimport {ImageAPI} from '../../consts';\nimport './style.css';\n\nfunction ImageDetails(props) {\n    const {className, image} = props;\n\n    return (\n        <Card\n            className={Styles.combineStyles('ImageDetails', className)}\n            href={image.url} target=\"blank\"\n        >\n            <ImagePreview\n                source={ImageAPI.GET_IMAGE(image.id)}\n                details={image}\n            />\n\n            <CardBody>\n                <CardText className={Styles.combineStyles('ImageDetails-Author', 'text-center')}>\n                    {image.author || 'Author not known'}\n                </CardText>\n            </CardBody>\n        </Card>\n    );\n}\n\nImageDetails.propTypes = {\n    className: PropTypes.string,\n    image: PropTypes.shape({\n        id: PropTypes.string,\n        author: PropTypes.string,\n        width: PropTypes.number,\n        height: PropTypes.number,\n        url: PropTypes.string,\n        download_url: PropTypes.string,\n    }).isRequired,\n};\n\nexport default ImageDetails;\n","import React from 'react';\nimport {Button, Col, Container, Input, Label, Row} from 'reactstrap';\nimport {ImagesListConsumer, ImagesListProvider} from './context';\nimport LoadingContainer from '../../components/loading-container';\nimport ImageDetails from '../../components/image-details';\nimport LoadingAlert from '../../components/loading-alert';\nimport './styles.css';\n\nconst LIST_VALUE_TO_DATA_SOURCE_BY_SORT = {\n    'ID': (value) => value.getData(),\n    'Author': (value) => value.getSortedData('author'),\n};\n\nfunction ImagesPage() {\n    const [currentPage, setCurrentPage] = React.useState(0);\n\n    const [sort, setSort] = React.useState('Author');\n\n    return (\n        <ImagesListProvider page={currentPage}>\n            <ImagesListConsumer render={(value) => (\n                <LoadingContainer\n                    className='pt-5'\n                    loading={value.loading}\n                >\n                    {() => {\n                        if (value.error) {\n                            return (\n                                <LoadingAlert\n                                    message='Could not load the image list :('\n                                    onReload={value.reload}\n                                    error={value.error}\n                                />\n                            );\n                        }\n\n                        return (\n                            <Container>\n                                <Row className='mb-5'>\n                                    <Col\n                                        className='text-left'\n                                        md={3}\n                                    >\n                                        <Label>\n                                            Sort by:\n                                        </Label>\n                                        <Input\n                                            id=\"sort\"\n                                            type=\"select\"\n                                            value={sort}\n                                            onChange={(event) => {\n                                                setSort(event.target.value);\n                                            }}\n                                        >\n                                            {Object.keys(LIST_VALUE_TO_DATA_SOURCE_BY_SORT)\n                                                .map((sortType) => (\n                                                    <option key={sortType}>{sortType}</option>\n                                                ))}\n                                        </Input>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    {LIST_VALUE_TO_DATA_SOURCE_BY_SORT[sort](value).map((image, index) => (\n                                        <Col\n                                            key={`${image.id}-${index}`}\n                                            className='mb-4'\n                                            sm={12}\n                                            md={6}\n                                            lg={4} // this causes an empty slot at last position (3 items per row) which looks quite bad but better than lg={6}\n                                            xl={3}\n                                        >\n                                            <ImageDetails image={image}/>\n                                        </Col>\n                                    ))}\n                                </Row>\n\n                                <Row className='mt-5 mb-5'>\n                                    <Col>\n                                        <Button\n                                            color='primary'\n                                            disabled={!value.hasPreviousPage()}\n                                            onClick={() => setCurrentPage((oldCurrentPage) => Math.max(0, oldCurrentPage - 1))}\n                                        >\n                                            Previous page\n                                        </Button>\n                                    </Col>\n\n                                    <Col className='align-items-center justify-content-center d-flex'>\n                                        <span>{currentPage + 1}</span>\n                                    </Col>\n\n                                    <Col>\n                                        <Button\n                                            color='primary'\n                                            disabled={!value.hasNextPage()}\n                                            onClick={() => setCurrentPage((oldCurrentPage) => oldCurrentPage + 1)}\n                                        >\n                                            Next page\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        );\n                    }}\n                </LoadingContainer>\n            )}/>\n        </ImagesListProvider>\n    );\n}\n\nexport default ImagesPage;\n","import React from 'react';\nimport {Container, Navbar, NavbarBrand, NavLink} from 'reactstrap';\nimport {BrowserRouter, HashRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport HomePage from './pages/home';\nimport ImagesPage from './pages/images';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst Router = process.env?.NODE_ENV === 'development'\n    ? BrowserRouter\n    : HashRouter;\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Navbar color=\"light\">\n                <NavbarBrand href=\"/\">Images</NavbarBrand>\n                <NavLink href=\"/images\">See all images</NavLink>\n            </Navbar>\n\n            <Container>\n                <Router basename={process.env.PUBLIC_URL}>\n                    <Switch>\n                        <Route exact path=\"/\" component={HomePage}/>\n                        <Route path=\"/images\" component={ImagesPage}/>\n                        <Redirect to=\"/\"/>\n                    </Switch>\n                </Router>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App/>, rootElement);\n"],"sourceRoot":""}